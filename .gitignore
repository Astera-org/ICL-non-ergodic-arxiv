# Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
dev-debug.log

# Dependency directories
node_modules/

# Environment variables
.env

# Editor directories and files
.idea
.vscode
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

# OS specific
.DS_Store

# Task files
tasks.json
tasks/

# Hydra outputs
outputs/

# W&B local artifacts
.wandb/
wsl-
wandb/ 

# Byte-compiled / optimized / DLL files
__pycache__/
*.pyc
*.pyo
*.pyd
*.egg-info/
*.so

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# PEP 582; __pypackages__ directory
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath files
.sage. Pers√∂nlich
*.sage.py

# Environments
.env
.venv/
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static analyzer
.pytype/

# Cython debug symbols
cython_debug/

# Operating System Files
.DS_Store
Thumbs.db
desktop.ini

# IDE / Editor specific files
.vscode/
.idea/
*.swp
*.swo
# .cursor/ # User has versioned rules in .cursor/rules, so don't ignore the whole folder
!.cursor/rules/ # Specifically don't ignore the rules subfolder

# Roo (similar to .cursor, assuming rules might be versioned)
# .roo/ # Assuming user has versioned rules in .roo/rules
!.roo/rules/

# Data files - HDF5 files are generated by scripts
# data/*.hdf5 # Removing this specific one, relying on general *.hdf5
data/cache/
data/raw/ # Assuming raw data is downloaded/large and not meant to be versioned

# Logs and outputs
logs/
outputs/
multirun/
experiment_logs/
*.log
# wandb/ # W&B specific files - ignore run data but keep settings if any
wandb/latest-run/
wandb/run-*/
wandb/debug*.log
wandb/offline-run-*/

# Taskmaster configuration (contains local model choices)
.taskmasterconfig

# Specific log file mentioned in project structure
analyze_custom_tokenized_data_chunked_len100.log

# MLflow
mlruns/
mlflow-artifacts/

# Ensure this is present and covers all hdf5 files
*.hdf5
.DS_Store
.env
.pytest_cache/
.python-version

# Cached data files from Hugging Face datasets or other sources
data/cache/